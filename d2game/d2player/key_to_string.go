package d2player

import (
	"github.com/OpenDiablo2/OpenDiablo2/d2common/d2enum"
	"github.com/OpenDiablo2/OpenDiablo2/d2core/d2asset"
)

// KeyToString returns a string representing the key
func KeyToString(k d2enum.Key, assetManager *d2asset.AssetManager) string {
	switch k {
	case -1:
		return assetManager.TranslateString("KeyNone")
	case d2enum.KeyTilde:
		return "~"
	case d2enum.KeyHome:
		return assetManager.TranslateString("KeyHome")
	case d2enum.KeyControl:
		return assetManager.TranslateString("KeyControl")
	case d2enum.KeyShift:
		return assetManager.TranslateString("KeyShift")
	case d2enum.KeySpace:
		return assetManager.TranslateString("KeySpace")
	case d2enum.KeyAlt:
		return assetManager.TranslateString("KeyAlt")
	case d2enum.KeyTab:
		return assetManager.TranslateString("KeyTab")
	case d2enum.Key0:
		return "0"
	case d2enum.Key1:
		return "1"
	case d2enum.Key2:
		return "2"
	case d2enum.Key3:
		return "3"
	case d2enum.Key4:
		return "4"
	case d2enum.Key5:
		return "5"
	case d2enum.Key6:
		return "6"
	case d2enum.Key7:
		return "7"
	case d2enum.Key8:
		return "8"
	case d2enum.Key9:
		return "9"
	case d2enum.KeyA:
		return "A"
	case d2enum.KeyB:
		return "B"
	case d2enum.KeyC:
		return "C"
	case d2enum.KeyD:
		return "D"
	case d2enum.KeyE:
		return "E"
	case d2enum.KeyF:
		return "F"
	case d2enum.KeyG:
		return "G"
	case d2enum.KeyH:
		return "H"
	case d2enum.KeyI:
		return "I"
	case d2enum.KeyJ:
		return "J"
	case d2enum.KeyK:
		return "K"
	case d2enum.KeyL:
		return "L"
	case d2enum.KeyM:
		return "M"
	case d2enum.KeyN:
		return "N"
	case d2enum.KeyO:
		return "O"
	case d2enum.KeyP:
		return "P"
	case d2enum.KeyQ:
		return "Q"
	case d2enum.KeyR:
		return "R"
	case d2enum.KeyS:
		return "S"
	case d2enum.KeyT:
		return "T"
	case d2enum.KeyU:
		return "U"
	case d2enum.KeyV:
		return "V"
	case d2enum.KeyW:
		return "W"
	case d2enum.KeyX:
		return "X"
	case d2enum.KeyY:
		return "Y"
	case d2enum.KeyZ:
		return "Z"
	case d2enum.KeyF1:
		return "F1"
	case d2enum.KeyF2:
		return "F2"
	case d2enum.KeyF3:
		return "F3"
	case d2enum.KeyF4:
		return "F4"
	case d2enum.KeyF5:
		return "F5"
	case d2enum.KeyF6:
		return "F6"
	case d2enum.KeyF7:
		return "F7"
	case d2enum.KeyF8:
		return "F8"
	case d2enum.KeyF9:
		return "F9"
	case d2enum.KeyF10:
		return "F10"
	case d2enum.KeyF11:
		return "F11"
	case d2enum.KeyF12:
		return "F12"
	case d2enum.KeyF13:
		return "F13"
	case d2enum.KeyF14:
		return "F14"
	case d2enum.KeyF15:
		return "F15"
	case d2enum.KeyF16:
		return "F16"
	case d2enum.KeyKP0:
		return assetManager.TranslateString("KeyNumPad0")
	case d2enum.KeyKP1:
		return assetManager.TranslateString("KeyNumPad1")
	case d2enum.KeyKP2:
		return assetManager.TranslateString("KeyNumPad2")
	case d2enum.KeyKP3:
		return assetManager.TranslateString("KeyNumPad3")
	case d2enum.KeyKP4:
		return assetManager.TranslateString("KeyNumPad4")
	case d2enum.KeyKP5:
		return assetManager.TranslateString("KeyNumPad5")
	case d2enum.KeyKP6:
		return assetManager.TranslateString("KeyNumPad6")
	case d2enum.KeyKP7:
		return assetManager.TranslateString("KeyNumPad7")
	case d2enum.KeyKP8:
		return assetManager.TranslateString("KeyNumPad8")
	case d2enum.KeyKP9:
		return assetManager.TranslateString("KeyNumPad9")
	case d2enum.KeyPrintScreen:
		return assetManager.TranslateString("KeySnapshot")
	case d2enum.KeyRightBracket:
		return assetManager.TranslateString("KeyRBracket")
	case d2enum.KeyLeftBracket:
		return assetManager.TranslateString("KeyLBracket")
	case d2enum.KeyMouse3:
		return assetManager.TranslateString("KeyMButton")
	case d2enum.KeyMouse4:
		return assetManager.TranslateString("Key4Button")
	case d2enum.KeyMouse5:
		return assetManager.TranslateString("Key5Button")
	case d2enum.KeyMouseWheelUp:
		return assetManager.TranslateString("KeyWheelUp")
	case d2enum.KeyMouseWheelDown:
		return assetManager.TranslateString("KeyWheelDown")
	default:
		return "Unknown"
	}
}
